<?php
/*
* SDBE functions - Provides function for SDBE.
*
* @version 1.0
* @since 0.1
* @package shopp-sdbe
* @subpackage sdbe-functions
*
*/

/*
 *
 * @author Shoppdeveloper.com
 * @since 0.1
 *
 */



function sdbe( $result, $options, $Catalog ){
	$default_result = $result; //holds breadcrumb generated by Shopp
	$in_category = 	shopp('category','id','return=true');
	
	if( !(  shopp( 'catalog','type','return=true' ) == 'product' ) ){ 
		//we only need to (re)create breadcrumbs on product pages
		return $result;
	}
	
	if( ( shopp( 'product','in-category',"id=$in_category" ) ) ){
		//product page accessed through category menu
		return $result;
	} else {
		$sdbe_options = array(); // holds options running the plugin, no options are stored in database
		$breadcrumbs = array(); // holds the trail of (sub)categories a product belongs to

		if( array_key_exists( 'separator',$options ) ){
			$sdbe_options['separator'] = $options['separator'];
			$sdbe_options['separator_type'] = 'custom' ; 
		} else {
			$sdbe_options['separator'] = htmlentities('»');
			$sdbe_options['separator_type'] = 'default' ; 
		}
		
		if( ( strpos( $result,$sdbe_options['separator'] ) > 0 ) ){
			switch( $sdbe_options['separator_type'] ) {
			
		 		case 'default':
						$result = substr( $result,0,strpos( $result,$sdbe_options['separator'] )-6 );
						$sdbe_options['separator'] = " ".$sdbe_options['separator']." ";
						break;
				case 'custom' :
						$result = substr( $result,0,strpos( $result,$sdbe_options['separator'] ) );
						break;
			}
		}
		
		if( ( $in_category == '' ) && ( $sdbe_options['separator_type'] == 'default' ) ){
			$sdbe_options['separator'] = " ".$sdbe_options['separator']." ";					
		}

		if( shopp( 'product','has-categories' ) ){
			$sdbe_cat_id = '';
			while( shopp( 'product','categories' ) && empty( $sdbe_cat_id ) ){
				$sdbe_cat_id = shopp( 'product','category','show=id&return=true' );
			}
			$result = str_replace( '</ul>','',$result ); // remove </ul> from Shopp generated breadcrumb
			$sdbe_cat_tree = sdbe_generate_cat_tree();
			while ( isset( $sdbe_cat_tree[$sdbe_cat_id]['parent'] ) ){
				$trail = '<li>';
				$trail .= $sdbe_options['separator'];
				$trail .= "<a href='".$sdbe_cat_tree[$sdbe_cat_id]['url']."'>";
				$trail .= $sdbe_cat_tree[$sdbe_cat_id]['name'];
				$trail .= "</a>";
				$trail .= '</li>';
				$breadcrumbs[] = $trail;
				$trail = '';
				$sdbe_cat_id = $sdbe_cat_tree[$sdbe_cat_id]['parent'];
			}
			if( count( $breadcrumbs ) > 1 ) { $breadcrumbs = array_reverse( $breadcrumbs ); }
			$result .= implode( $breadcrumbs ).'</ul>';
			return $result;			
		} else {
			// if product has no categorie, return Shopp generated breadcrumb
			$result = $default_result;
			return $result;
		}	
	}
}

function sdbe_generate_cat_tree(){
	$tree = array();
	if( shopp( 'catalog','has-categories' ) ){
		while( shopp( 'catalog','categories' ) ){
				$key = shopp( 'category','id','return=true' );
				$tree[$key]['name'] = shopp( 'category','name','return=true' );
				$tree[$key]['url'] = shopp( 'category','url','return=true' );
				if( shopp( 'category','is-subcategory' ) ) {
					$tree[$key]['parent'] = shopp( 'category','parent','show=id&return=true' );
				} else {
					$tree[$key]['parent'] = '';				
				}
		}	
	}
	return $tree;
}

?>